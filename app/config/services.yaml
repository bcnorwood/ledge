services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: ../src/
        exclude:
            - ../src/DependencyInjection/
            - ../src/Entity/
            - ../src/Kernel.php
            - ../src/Tests/

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: ../src/Controller/
        tags:
            - controller.service_arguments

    json_schema.constraints.factory:
        class: JsonSchema\Constraints\Factory
        arguments:
            $checkMode: !php/const JsonSchema\Constraints\Constraint::CHECK_MODE_TYPE_CAST

    JsonSchema\Validator:
        arguments:
            $factory: '@json_schema.constraints.factory'

    Symfony\Component\Serializer\Normalizer\DateTimeNormalizer:
        arguments:
            $defaultContext:
                !php/const Symfony\Component\Serializer\Normalizer\DateTimeNormalizer::FORMAT_KEY: Y-m-d H:i:s

    serializer.name_converter.camel_case_to_snake_case:
        class: Symfony\Component\Serializer\NameConverter\CamelCaseToSnakeCaseNameConverter

    Symfony\Component\Serializer\Normalizer\ObjectNormalizer:
        arguments:
            $nameConverter: '@serializer.name_converter.camel_case_to_snake_case'

    Gedmo\Timestampable\TimestampableListener:
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [setAnnotationReader, ['@annotation_reader']]
